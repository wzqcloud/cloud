SNAT
[root@docker ~]# iptables -t nat -A POSTROUTING -s 192.168.110.0/24 -j SNAT  --to-source 192.168.228.129
[root@docker ~]# iptables -t nat -nvL
Chain POSTROUTING (policy ACCEPT 3 packets, 180 bytes)
 pkts bytes target     prot opt in     out     source               destination 
  0     0 SNAT       all  --  *      *       192.168.110.0/24     0.0.0.0/0            to:192.168.228.129
  
DNAT

[root@docker ~]# iptables -t nat -I PREROUTING -d 192.168.228.129  -p tcp  --dport 3355 -j DNAT  --to-destination 172.17.0.8
[root@docker ~]# iptables -t nat -A POSTROUTING -s 172.17.0.0/16 -j SNAT  --to-source 192.168.228.129
Chain PREROUTING (policy ACCEPT 3 packets, 180 bytes)
 pkts bytes target     prot opt in     out     source               destination         
    0     0 DNAT       tcp  --  *      *       0.0.0.0/0            192.168.228.129      tcp dpt:3355 to:172.17.0.8
    0     0 SNAT       all  --  *      *       172.17.0.0/16        0.0.0.0/0            to:192.168.228.129
  
MASQUERADE
[root@docker ~]# iptables -t nat -I POSTROUTING -s 192.168.100.0/24  -o ens32 -j MASQUERADE
[root@docker ~]# iptables -t nat -nvL POSTROUTING
Chain POSTROUTING (policy ACCEPT 5 packets, 300 bytes)
 pkts bytes target     prot opt in     out     source               destination         
    0     0 MASQUERADE  all  --  *      ens32   192.168.100.0/24     0.0.0.0/0           
  335 20103 MASQUERADE  all  --  *      !docker0  172.17.0.0/16        0.0.0.0/0           
    0     0 MASQUERADE  all  --  *      eth0    192.168.228.0/24     0.0.0.0/0           

(可以把MASQUERADE理解为动态的,自动化的SNAT，如果没有动态SNAT的需求，没有必要使用MASQUERADE，因为SNAT更加高效.)

REDIRECT

[root@docker ~]# iptables -t nat -A PREROUTING -p tcp  --dport 80 -j REDIRECT --to-ports 8089
  REDIRECT动作可以在本机上进行端口映射
  将本机的80端口映射到本机的8089端口上

经过上述规则映射后，当别的机器访问本机的80端口时，报文会被重定向到本机的8089端口上。

REDIRECT规则只能定义在PREROUTING链或者OUTPUT链中。

